main:
  params: [input]
  steps:
  - getSha:
      assign:
        - sha: ${input.sha}
      next: pendingGithub
  - pendingGithub:
      call: http.post
      args:
        url: https://australia-southeast1-cloud-pipeline-dev.cloudfunctions.net/notify-github
        body:
          sha: ${sha}
          repo: "workflow-cicd-demo"
          owner: "jgunnink"
          state: "pending"
          context: "Workflow CD"
          description: "Pipeline running..."
          workflowId: ${sys.get_env("GOOGLE_CLOUD_WORKFLOW_EXECUTION_ID")}
      next: deployInfrastructure
  - deployInfrastructure:
      call: googleapis.cloudbuild.v1.projects.builds.create
      args:
        projectId: ${sys.get_env("GOOGLE_CLOUD_PROJECT_ID")}
        body:
          steps:
            - name: "gcr.io/cloud-builders/gcloud"
              entrypoint: "bash"
              args:
                - "-c"
                - |
                  echo "Hello world"
        connector_params:
          timeout: 600 # Seconds
      result: result
  - deployInfraResult:
      switch:
        - condition: ${"operation" in result and "error" in result.operation } # Go to failure if unsuccessful
          next: failGithub
      next: succeedGithub
  - succeedGithub:
      call: http.post
      args:
        url: https://australia-southeast1-cloud-pipeline-dev.cloudfunctions.net/notify-github
        body:
          sha: ${sha}
          repo: "workflow-cicd-demo"
          owner: "jgunnink"
          state: "success"
          context: "Workflow CD"
          description: "Pipeline successful"
          workflowId: ${sys.get_env("GOOGLE_CLOUD_WORKFLOW_EXECUTION_ID")}
      next: end
  - failGithub:
      call: http.post
      args:
        url: https://australia-southeast1-cloud-pipeline-dev.cloudfunctions.net/notify-github
        body:
          sha: ${sha}
          repo: "workflow-cicd-demo"
          owner: "jgunnink"
          state: "failure"
          context: "Workflow CD"
          description: "Pipeline failed"
          workflowId: ${sys.get_env("GOOGLE_CLOUD_WORKFLOW_EXECUTION_ID")}
      next: end
