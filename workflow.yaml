main:
  params: [input]
  steps:
  - getSha:
      assign:
        - sha: ${input.sha}
      next: pendingGithub
  - pendingGithub:
      call: http.post
      args:
        url: https://australia-southeast1-cloud-pipeline-dev.cloudfunctions.net/notify-github
        body:
          sha: ${sha}
          repo: "workflow-cicd-demo"
          owner: "jgunnink"
          state: "pending"
          context: "Workflow CD"
          description: "Pipeline running..."
          workflowId: ${sys.get_env("GOOGLE_CLOUD_WORKFLOW_EXECUTION_ID")}
      next: ensureWorkflowCurrent
  - ensureWorkflowCurrent:
      try:
        call: googleapis.cloudbuild.v1.projects.triggers.run
        args:
          projectId: ${sys.get_env("GOOGLE_CLOUD_PROJECT_ID")}
          triggerId: ensureWorkflowCurrent
          body:
            commitSha: ${sha}
          connector_params:
            timeout: 600 # Seconds
        result: result
      except:
        as: error
        assign:
          - pipelineError: ${error}
  - ensureWorkflowCurrentResult:
      switch:
        - condition: ${pipelineError != null} # Go to failure if unsuccessful
          next: failGithub
      next: deployCode
  - deployCode:
      try:
        call: googleapis.cloudbuild.v1.projects.triggers.run
        args:
          projectId: ${sys.get_env("GOOGLE_CLOUD_PROJECT_ID")}
          triggerId: deployCode
          body:
            commitSha: ${sha}
          connector_params:
            timeout: 600 # Seconds
        result: result
      except:
        as: error
        assign:
          - pipelineError: ${error}
  - deployCodeResult:
      switch:
        - condition: ${pipelineError != null} # Go to failure if unsuccessful
          next: failGithub
      next: succeedGithub
  - succeedGithub:
      call: http.post
      args:
        url: https://australia-southeast1-cloud-pipeline-dev.cloudfunctions.net/notify-github
        body:
          sha: ${sha}
          repo: "workflow-cicd-demo"
          owner: "jgunnink"
          state: "success"
          context: "Workflow CD"
          description: "Pipeline successful"
          workflowId: ${sys.get_env("GOOGLE_CLOUD_WORKFLOW_EXECUTION_ID")}
      next: end
  - failGithub:
      call: http.post
      args:
        url: https://australia-southeast1-cloud-pipeline-dev.cloudfunctions.net/notify-github
        body:
          sha: ${sha}
          repo: "workflow-cicd-demo"
          owner: "jgunnink"
          state: "failure"
          context: "Workflow CD"
          description: ${pipelineError.operation.error}
          workflowId: ${sys.get_env("GOOGLE_CLOUD_WORKFLOW_EXECUTION_ID")}
      next: end
